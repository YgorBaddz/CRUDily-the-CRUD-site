Привет, я Игорь Бадмаев, и это мой проект для lad-academy. 
Этот сайт является CRUD вебсайтом, где пользователь может изменять, удалять и добавлять людей в таблицу.

Какие условия были? Давайте пройдёмся поочерёдно и опишу что именно я сделал:

1. Стек React (или NextJS)
Для проекта я использовал reactjs

2. Функциональные компоненты, React-hooks
Из обычного реакта я использовал только 2 вида хуков: useEffect и конечно же useState. 

Также я использовал хуки от react-router-dom, а именно useParams чтобы получить данные отдельного объекта по id, а также useNavigate для перехода на страницу таблицы после совершения действия.

Ну и, хуки от redux, а именно useDispatch и useSelector.

3. Модульные стили или styled-components
Для стилизации сайта я использовал как модульные cssы, так и библиотеку bootstrap чтобы быстрым способом построить таблицу в UserListing.jsx.

4. Роутинг React-router-dom или NextJS
Я использовал react-router-dom. В app.jsx прописана вся логистика страниц.

5. Redux/ReduxToolKit. Асинхронные экшены Redux-thunk или Redux-saga
Для проекта я использовал redux, как и требовали в задании.
Есть отдельная папка для Redux.

6. Работа с API с помощью клиента Axios (можно использовать любое открытое API, либо свой вариант) 
Использовал я axios, и юзал я его в Redux/Action.js где делал запрос на json-placeholder для получения данных.

7. Адаптивность - приложение должно корректно выглядеть на всех типах устройств (mobile, tablet, desktop, retina)
Сайт полностью адаптирован под любые устройства.

8. Деплой приложения (gh-pages, vercel, heroku.com, fly.io).
Проект был задеплоен с помощью Vercel.

Изначально я строил сайт с помощью json-server, чтобы быстрым способом потреблять данные. 
Однако, когда дело дошло до деплоя проекта, произошли проблемы, которые я не смог успеть решить, из-за чего мне пришлось на последних минутах изменить мою собственную базу данных на бд json-placeholder. 
LocalStorage я успеть не сделал, так что данные от плейсхолдера на таблице неизменяемы. 
Однако, если хотите посмотреть как мой фунцкионал работает правильно, то предлагаю запустить проект локально, запустив json-server на втором терминале (команда: json-server -p 8000 -w  src/db.jso 8000 -w  src/db.json), и изменив запросы аксиоса в action.js с данных плейсхолдера на моего сервера. Должно работать безупречно.

На этом всё, хорошего дня.